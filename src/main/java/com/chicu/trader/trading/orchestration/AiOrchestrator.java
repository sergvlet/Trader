package com.chicu.trader.trading.orchestration;

import com.chicu.trader.trading.optimizer.ProfitOptimizer;
import com.chicu.trader.trading.scanner.MarketScanner;
import com.chicu.trader.trading.executor.TradingExecutor;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.time.Duration;
import java.util.List;

@Slf4j
@Service
@RequiredArgsConstructor
public class AiOrchestrator {

    private final MarketScanner marketScanner;
    private final ProfitOptimizer profitOptimizer;
    private final TradingExecutor tradingExecutor;

    /**
     * –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –∏ –∑–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–ª–∏.
     */
    @Scheduled(cron = "0 0 * * * *") // –∫–∞–∂–¥—ã–π —á–∞—Å
    public void runFullOrchestration() {
        log.info("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ AI Orchestration");

        // –î–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ç–æ –≤–∫–ª—é—á–∏–ª AI-—Ç–æ—Ä–≥–æ–≤–ª—é (–∑–¥–µ—Å—å –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–æ—Ç–æ–º —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
        List<Long> activeUsers = List.of(5316412277L);  // ‚ö† –∑–¥–µ—Å—å –ø–æ–∫–∞ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ, –ø–æ—Ç–æ–º –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Å–µ—Ä–≤–∏—Å AiTradingSettingsService

        for (Long chatId : activeUsers) {
            try {
                orchestrateForUser(chatId);
            } catch (Exception e) {
                log.error("–û—à–∏–±–∫–∞ orchestration –¥–ª—è chatId={}: {}", chatId, e.getMessage());
            }
        }
    }

    private void orchestrateForUser(Long chatId) {
        log.info("‚ñ∂ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {}", chatId);

        // 1Ô∏è‚É£ –°–∫–∞–Ω–∏—Ä—É–µ–º –ª—É—á—à–∏–µ –ø–∞—Ä—ã
        List<String> topSymbols = marketScanner.scanTopSymbols(5, Duration.ofMinutes(15));
        log.info("‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ç–æ–ø –º–æ–Ω–µ—Ç—ã: {}", topSymbols);

        // 2Ô∏è‚É£ –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã TP/SL
        profitOptimizer.optimize(chatId, topSymbols, "15m");

        // 3Ô∏è‚É£ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ—Ä–≥–æ–≤–ª—é
        tradingExecutor.execute();
    }
}
